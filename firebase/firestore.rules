rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }
    
    function isSeller() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.account_type == 'seller';
    }
    
    function isVerifiedSeller() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verification.verified_seller == true;
    }
    
    function isPremiumUser() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subscription.astel_plus == true;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if false; // Users cannot delete their accounts
    }
    
    // Posts collection
    match /posts/{postId} {
      allow read: if true; // Public posts
      allow create: if isAuthenticated() && 
        (resource.data.post_type == 'tutorial' || isSeller());
      allow update: if isAuthenticated() && 
        resource.data.author_id == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.author_id == request.auth.uid;
    }
    
    // Stories collection
    match /stories/{storyId} {
      allow read: if true; // Public stories
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.author_id == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.author_id == request.auth.uid;
    }
    
    // Comments collection
    match /comments/{commentId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
        resource.data.author_id == request.auth.uid;
      allow delete: if isAuthenticated() && 
        resource.data.author_id == request.auth.uid;
    }
    
    // Ads collection
    match /ads/{adId} {
      allow read: if true;
      allow write: if isAuthenticated() && 
        resource.data.advertiser_id == request.auth.uid;
    }
    
    // Conversations collection
    match /conversations/{conversationId} {
      allow read, write: if isAuthenticated() && 
        (resource.data.participants[request.auth.uid] != null);
    }
    
    // Messages collection
    match /conversations/{conversationId}/messages/{messageId} {
      allow read, write: if isAuthenticated() && 
        (get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[request.auth.uid] != null);
    }
    
    // Followers collection
    match /followers/{followerId} {
      allow read: if true;
      allow write: if isAuthenticated() && isOwner(followerId);
    }
    
    // Subscriptions collection
    match /subscriptions/{subscriptionId} {
      allow read, write: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Moderation collection
    match /moderation/{itemId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // Admin collection
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Analytics collection (read-only for users, full access for admins)
    match /analytics/{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}
