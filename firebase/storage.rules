rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB max
    }
    
    function isValidVideo() {
      return request.resource.contentType.matches('video/.*') &&
             request.resource.size < 100 * 1024 * 1024; // 100MB max
    }
    
    // Profile pictures
    match /profiles/{userId}/{allPaths=**} {
      allow read: if true; // Public profile pictures
      allow write: if isAuthenticated() && isOwner(userId) && isValidImage();
    }
    
    // Post media (products and tutorials)
    match /posts/{postId}/{allPaths=**} {
      allow read: if true; // Public post media
      allow write: if isAuthenticated() && 
        (isValidImage() || isValidVideo());
    }
    
    // Story media
    match /stories/{storyId}/{allPaths=**} {
      allow read: if true; // Public story media
      allow write: if isAuthenticated() && 
        (isValidImage() || isValidVideo());
    }
    
    // Verification documents (CAC, BVN)
    match /verification/{userId}/{allPaths=**} {
      allow read: if isAuthenticated() && 
        (isOwner(userId) || isAdmin());
      allow write: if isAuthenticated() && isOwner(userId) && 
        request.resource.contentType.matches('application/pdf|image/.*') &&
        request.resource.size < 5 * 1024 * 1024; // 5MB max for documents
    }
    
    // Ad media
    match /ads/{adId}/{allPaths=**} {
      allow read: if true; // Public ad media
      allow write: if isAuthenticated() && 
        (isValidImage() || isValidVideo());
    }
    
    // Temporary uploads
    match /temp/{userId}/{allPaths=**} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Admin uploads
    match /admin/{allPaths=**} {
      allow read, write: if isAdmin();
    }
  }
}
